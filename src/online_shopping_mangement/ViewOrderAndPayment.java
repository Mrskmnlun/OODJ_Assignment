/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package online_shopping_mangement;

import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ASUS
 */
public class ViewOrderAndPayment extends javax.swing.JFrame {

    /**
     * Creates new form ViewOrderAndPayment
     */
    public ViewOrderAndPayment() {
        initComponents();
        try(BufferedReader br = new BufferedReader(new FileReader("Order.txt"))){
            String orderdata = br.readLine();
            DefaultTableModel tblModel = (DefaultTableModel)OrderTable.getModel();
            while ((orderdata = br.readLine())!= null){
                String[] data = orderdata.split("/");
                
                try{
                    BufferedReader br2 = new BufferedReader(new FileReader("Delivery.txt"));
                    String deliverydata = br2.readLine();
                    while ((deliverydata = br2.readLine())!= null){
                        String[] data2 = deliverydata.split("/"); 
                        if(data2[2].equals(data[0])){
                           String tabledata[] = {data[0], data[1], data[2], data[3], data[6], data[8], data[9], data2[7], data2[8]};
                           tblModel.addRow(tabledata);
                        }
                    }
                    br2.close();
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(rootPane, "Error occurs while reading file.", "System Error", JOptionPane.ERROR_MESSAGE);
                }
                
                
            }
            br.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, "Error occurs while reading file.", "System Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void filter(String query){
        DefaultTableModel tblModel = (DefaultTableModel)OrderTable.getModel();
        TableRowSorter<DefaultTableModel> tr=new TableRowSorter<DefaultTableModel>(tblModel);
        OrderTable.setRowSorter(tr);
        
        tr.setRowFilter(RowFilter.regexFilter(query));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nav = new javax.swing.JPanel();
        resortroombookingsystem = new javax.swing.JLabel();
        backbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        OrderTable = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        generatepdf = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("View Order & Payment");

        nav.setBackground(new java.awt.Color(255, 204, 51));

        resortroombookingsystem.setFont(new java.awt.Font("Tw Cen MT", 1, 24)); // NOI18N
        resortroombookingsystem.setForeground(new java.awt.Color(255, 255, 255));
        resortroombookingsystem.setText("View Order & Payment");

        backbtn.setBackground(new java.awt.Color(255, 255, 204));
        backbtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        backbtn.setText("Back");
        backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout navLayout = new javax.swing.GroupLayout(nav);
        nav.setLayout(navLayout);
        navLayout.setHorizontalGroup(
            navLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navLayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(resortroombookingsystem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        navLayout.setVerticalGroup(
            navLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(navLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backbtn)
                    .addComponent(resortroombookingsystem))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        OrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Customer Name", "Product ID", "Product Name", "Quantity", "Total Payment", "Order Date", "Delivery Status", "Feedback"
            }
        ));
        jScrollPane1.setViewportView(OrderTable);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Search:");
        jLabel11.setToolTipText("");

        search.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        search.setToolTipText("");
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
        });

        generatepdf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        generatepdf.setText("Generate PDF");
        generatepdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generatepdfActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(nav, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 855, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(generatepdf)
                .addGap(128, 128, 128))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(nav, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(generatepdf))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtnActionPerformed
        AdminMainPage am = new AdminMainPage();
        am.setVisible(true);
        dispose();
    }//GEN-LAST:event_backbtnActionPerformed

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
        String query=search.getText();
        
        filter(query);
    }//GEN-LAST:event_searchKeyReleased

    private void generatepdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generatepdfActionPerformed
        int a = JOptionPane.showConfirmDialog(rootPane, "Do you want to generate report?", "Select", JOptionPane.YES_NO_OPTION);
        if (a==0){

            try{
                String chars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
                Random rnd = new Random();
                int len = 5;
                StringBuilder sb = new StringBuilder(len);
                
                for (int i = 0; i < len; i++){
                    sb.append(chars.charAt(rnd.nextInt(chars.length())));
                }
                
                String id = sb.toString();
                
                DefaultTableModel tblModel = (DefaultTableModel)OrderTable.getModel();
                //create pdf receipt
                String path ="C:\\Users\\ASUS\\Documents\\NetBeansProjects\\OODJ_Assignment\\";
                com.itextpdf.text.Document doc = new com.itextpdf.text.Document();
                PdfWriter.getInstance(doc, new FileOutputStream(path+id+".pdf"));
                doc.open();
                
                Paragraph paragraph1 = new Paragraph("----------------------------------------------------------------------------------------------------------------------------------"); 
                doc.add(paragraph1);
                Paragraph paragraph2 = new Paragraph("                                                    Order & Payment Records                                                       ");
                doc.add(paragraph2);
                Paragraph paragraph3 = new Paragraph("----------------------------------------------------------------------------------------------------------------------------------"); 
                doc.add(paragraph3);
                Paragraph paragraph4 = new Paragraph("                                                                                                                                  ");
                doc.add(paragraph4);
                
                PdfPTable tb1 = new PdfPTable(9);
                tb1.setWidthPercentage(100);
                
                tb1.addCell("Order ID");
                tb1.addCell("Customer Name");
                tb1.addCell("Product ID");
                tb1.addCell("Product Name");
                tb1.addCell("Quantity");
                tb1.addCell("Total Payment");
                tb1.addCell("Order Date");
                tb1.addCell("Delivery Status");
                tb1.addCell("Feedback");
                
                for (int i = 0; i<OrderTable.getRowCount(); i++){
                    
                    String OrderID = OrderTable.getValueAt(i, 0).toString();
                    String CustomerName = OrderTable.getValueAt(i, 1).toString();
                    String ProductID = OrderTable.getValueAt(i, 2).toString();
                    String ProductName = OrderTable.getValueAt(i, 3).toString();
                    String Quantity = OrderTable.getValueAt(i, 4).toString();
                    String TotalPayment = OrderTable.getValueAt(i, 5).toString();
                    String OrderDate = OrderTable.getValueAt(i, 6).toString();
                    String DeliveryStatus = OrderTable.getValueAt(i, 7).toString();
                    String Feedback = OrderTable.getValueAt(i, 8).toString();
                    
                    tb1.addCell(OrderID);
                    tb1.addCell(CustomerName);
                    tb1.addCell(ProductID);
                    tb1.addCell(ProductName);
                    tb1.addCell(Quantity);
                    tb1.addCell(TotalPayment);
                    tb1.addCell(OrderDate);
                    tb1.addCell(DeliveryStatus);
                    tb1.addCell(Feedback);
                }
                
                doc.add(tb1);
                doc.close();
                
                if ((new File(path+id+".pdf")).exists()){
                    Process p = Runtime
                            .getRuntime()
                            .exec("rundll32 url.dll, FileProtocolHandler "+path+id+".pdf");
                }
                else{
                    JOptionPane.showMessageDialog(rootPane, "PDF not exist.", "System Error", JOptionPane.ERROR_MESSAGE);
                }
                
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(rootPane, "Error occurs while reading file.", "System Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_generatepdfActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewOrderAndPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewOrderAndPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewOrderAndPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewOrderAndPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewOrderAndPayment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable OrderTable;
    private javax.swing.JButton backbtn;
    private javax.swing.JButton generatepdf;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel nav;
    private javax.swing.JLabel resortroombookingsystem;
    private javax.swing.JTextField search;
    // End of variables declaration//GEN-END:variables
}
