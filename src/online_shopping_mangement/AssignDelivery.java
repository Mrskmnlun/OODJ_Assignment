/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package online_shopping_mangement;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ASUS
 */
public class AssignDelivery extends javax.swing.JFrame {

    /**
     * Creates new form AssignDelivery
     */
    public AssignDelivery() {
        initComponents();
        
        try(BufferedReader br = new BufferedReader(new FileReader("Order.txt"))){
            String orderdata = br.readLine();
            DefaultTableModel tblModel = (DefaultTableModel)OrderTable.getModel();
            while ((orderdata = br.readLine())!= null){
                String[] data = orderdata.split("/");
                if (data[10].equals("Undeliver")){
                    String[] tabledata = {data[0], data[1], data[2], data[3], data[6], data[7], data[8], data[9]};
                    tblModel.addRow(tabledata);
                }
            }
            br.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, "Error occurs while reading file.", "System Error", JOptionPane.ERROR_MESSAGE);
        }
        
        
        try{
            BufferedReader br = new BufferedReader(new FileReader("UserAccount.txt"));
            String userdata = br.readLine();
            
            ArrayList<String> staffname = new ArrayList<String>();
            staffname.add("Select");
            while ((userdata = br.readLine())!= null){
                String[] data = userdata.split("/"); 
                if (data[2].equals("Delivery Staff")){
                   staffname.add(data[1]);
                }
                
            }
            
            Object[] name = staffname.toArray();
            deliverystaff.setModel(new javax.swing.DefaultComboBoxModel(name));
            
            br.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, "Error occurs while reading file.", "System Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }
    
    private void filter(String query){
        DefaultTableModel tblModel = (DefaultTableModel)OrderTable.getModel();
        TableRowSorter<DefaultTableModel> tr=new TableRowSorter<DefaultTableModel>(tblModel);
        OrderTable.setRowSorter(tr);
        
        tr.setRowFilter(RowFilter.regexFilter(query));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        OrderTable = new javax.swing.JTable();
        nav = new javax.swing.JPanel();
        resortroombookingsystem = new javax.swing.JLabel();
        backbtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        deliverystaff = new javax.swing.JComboBox<>();
        assign = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        search = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Delivery");

        OrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Customer Name", "Product ID", "Product Name", "Quantity", "Total Payment", "Order Date", "Address"
            }
        ));
        jScrollPane1.setViewportView(OrderTable);

        nav.setBackground(new java.awt.Color(255, 204, 51));

        resortroombookingsystem.setFont(new java.awt.Font("Tw Cen MT", 1, 24)); // NOI18N
        resortroombookingsystem.setForeground(new java.awt.Color(255, 255, 255));
        resortroombookingsystem.setText("Delivery");

        backbtn.setBackground(new java.awt.Color(255, 255, 204));
        backbtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        backbtn.setForeground(new java.awt.Color(51, 51, 51));
        backbtn.setText("Back");
        backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout navLayout = new javax.swing.GroupLayout(nav);
        nav.setLayout(navLayout);
        navLayout.setHorizontalGroup(
            navLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navLayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(resortroombookingsystem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72))
        );
        navLayout.setVerticalGroup(
            navLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(navLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resortroombookingsystem)
                    .addComponent(backbtn))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Delivery Staff: ");

        deliverystaff.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        assign.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        assign.setText("Assign");
        assign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Search:");

        search.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(nav, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 855, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(deliverystaff, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(63, 63, 63)
                                .addComponent(assign, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(nav, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(deliverystaff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assign, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void assignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignActionPerformed
        String StaffName = deliverystaff.getSelectedItem().toString();
        if(StaffName.equals("Select")){
            JOptionPane.showMessageDialog(rootPane, "Please select a delivery staff.", "System Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
            try{
                DefaultTableModel tblModel = (DefaultTableModel)OrderTable.getModel();
                String OrderID = tblModel.getValueAt(OrderTable.getSelectedRow(), 0).toString();
                String CustomerName = tblModel.getValueAt(OrderTable.getSelectedRow(), 1).toString();
                String ProductName = tblModel.getValueAt(OrderTable.getSelectedRow(), 3).toString();
                String Quantity = tblModel.getValueAt(OrderTable.getSelectedRow(), 4).toString();
                String Address = tblModel.getValueAt(OrderTable.getSelectedRow(), 7).toString();
                
                try{
                    File orderrecord = new File("Order.txt");
                    File tempfile = new File("temp.txt");
                    BufferedReader br = new BufferedReader(new FileReader("Order.txt"));
                    PrintWriter appenddata =new PrintWriter(new BufferedWriter(new FileWriter("temp.txt", true)));
                    String line = null;
                    while ((line = br.readLine())!= null){
                        String[] data = line.split("/");
                        if (data[0].equals(OrderID)){
                            appenddata.println(data[0]+"/"+data[1]+"/"+data[2]+"/"+data[3]+"/"+data[4]+"/"+data[5]+"/"+data[6]+"/"+data[7]+"/"+data[8]+"/"+data[9]+"/Assigned");
                         appenddata.flush();
                        }
                        else{
                            appenddata.println(line);
                            appenddata.flush();
                        }
                    }
                    appenddata.close();
                    br.close();
                    
                    if (!orderrecord.delete()){
                        JOptionPane.showMessageDialog(rootPane, "Could not delete the file.", "System Error", JOptionPane.ERROR_MESSAGE);
                    }
                    
                    if (!tempfile.renameTo(orderrecord)){
                        JOptionPane.showMessageDialog(rootPane, "Could not rename the file", "System Error", JOptionPane.ERROR_MESSAGE);
                    }
                    
                    
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(rootPane, "Error occurs while reading file.", "System Error", JOptionPane.ERROR_MESSAGE);
                }
                
                
                try{
                    BufferedReader br2 = new BufferedReader(new FileReader("Delivery.txt"));
                    String deliverydata = br2.readLine();
                    
                    ArrayList<String> delid = new ArrayList<String>();
                    while ((deliverydata = br2.readLine())!= null){
                        String[] data = deliverydata.split("/"); 
                        delid.add(data[0]);
                    }
                    
                    int i=0,noid=1; String id=null;
                    
                    while(i<1){
                        
                        id = "D"+Integer.toString(noid);
                        
                        if (!delid.contains(id)){
                            i=i+1;
                        }
                        noid++;
                    }
                    
                    br2.close();
                    
                    PrintWriter appenddata2 = new PrintWriter(new BufferedWriter(new FileWriter("Delivery.txt", true)));
                    appenddata2.println(id+"/"+StaffName+"/"+OrderID+"/"+CustomerName+"/"+ProductName+"/"+Quantity+"/"+Address+"/Pending/-/-");
                    appenddata2.close();
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(rootPane, "Error occurs while reading file.", "System Error", JOptionPane.ERROR_MESSAGE);
                }
                
                JOptionPane.showMessageDialog(rootPane, "Assign Successful", "Assign Delivery", JOptionPane.INFORMATION_MESSAGE);
                
                tblModel.setNumRows(0);
                try(BufferedReader br3 = new BufferedReader(new FileReader("Order.txt"))){
                    String orderdata = br3.readLine();
                    while ((orderdata = br3.readLine())!= null){
                        String[] data = orderdata.split("/");
                        if (data[10].equals("Undeliver")){
                            String[] tabledata = {data[0], data[1], data[2], data[3], data[6], data[7], data[8], data[9]};
                            tblModel.addRow(tabledata);
                        }
                    }
                    br3.close();
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(rootPane, "Error occurs while reading file.", "System Error", JOptionPane.ERROR_MESSAGE);
                }
                
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(rootPane, "The data is not selected!", "System Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_assignActionPerformed

    private void backbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtnActionPerformed
        AdminMainPage am = new AdminMainPage();
        am.setVisible(true);
        dispose();
    }//GEN-LAST:event_backbtnActionPerformed

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
        String query=search.getText();
        
        filter(query);
    }//GEN-LAST:event_searchKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AssignDelivery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AssignDelivery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AssignDelivery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AssignDelivery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AssignDelivery().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable OrderTable;
    private javax.swing.JButton assign;
    private javax.swing.JButton backbtn;
    private javax.swing.JComboBox<String> deliverystaff;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel nav;
    private javax.swing.JLabel resortroombookingsystem;
    private javax.swing.JTextField search;
    // End of variables declaration//GEN-END:variables
}
